<Window x:Class="Test.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Test"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:motion="clr-namespace:YuanliCore.Motion;assembly=YuanliCore.Model"
        xmlns:UserControlUC="clr-namespace:WLS3200Gen2.UserControls;assembly=WLS3200Gen2"
        xmlns:ViewControlUC="clr-namespace:WLS3200Gen2.Views;assembly=WLS3200Gen2"
        mc:Ignorable="d"
         DataContext="{Binding Main, Source={StaticResource Locator}}"   
        Title="MainWindow" Height="800" Width="1920">
    <Grid>
        <Grid.Resources>
            <ResourceDictionary>
                <Style TargetType="{x:Type Border}" x:Key="HorizontalDividerBorder">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}"/>
                    <Setter Property="UseLayoutRounding" Value="True"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="Height" Value="1"/>
                </Style>
                <!--<ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                    <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                    <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.blue.xaml" />
                    <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />

                </ResourceDictionary.MergedDictionaries>-->
            </ResourceDictionary>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="7*"/>
            <ColumnDefinition Width="11*"/>
        </Grid.ColumnDefinitions>
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Closing">
                <i:InvokeCommandAction  Command="{Binding ClosingCommand}"   />
            </i:EventTrigger>
            <i:EventTrigger EventName="Loaded">
                <i:InvokeCommandAction  Command="{Binding LoadedCommand}"  />
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <Grid Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="100"/>
                <RowDefinition Height="450"/>
                <RowDefinition Height="250"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions >
                <ColumnDefinition Width="350"/>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="650"/>
                <ColumnDefinition Width="600"/>
                <ColumnDefinition Width="120"/>
            </Grid.ColumnDefinitions>
            <!--<Button    Command="{Binding OpenCCommand}"    />-->
            <UserControlUC:LoadPortUnitUC Grid.Column="0" Grid.Row="1"  LoadPort="{Binding LoadPort}" LoadPortWafers="{Binding LoadPort1Wafers}" LoadPortUIShow ="{Binding LoadPortUIShow}" />
            <UserControlUC:AlignerUnitUC Grid.Column="0" Grid.Row="2" Aligner="{Binding Aligner}" AlignerUIShow="{Binding AlignerUIShow }"    />
            <GroupBox Header="Output" Grid.Column="2" Grid.ColumnSpan="1" Grid.Row="1">
                <UserControlUC:DigitalOutputUC OutputSignals="{Binding DigitalOutputs }"  />
            </GroupBox>
            <UserControlUC:RobotUnitUC Width="450" Height="450" Grid.Column="3" Grid.Row="1" Robot="{Binding Robot}" RobotStaus="{Binding RobotStaus }"   />
            <!--<GroupBox Header="Input" Grid.Column="3" Grid.Row="1" >
                -->
            <!--<UserControlUC:DigitalInputUC InputSignals="{Binding DigitalInputs}"/>-->
            <!--
            </GroupBox>-->
            <motion:AxisMotionUC Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="0" Axis="{Binding TableX }"  AxisSetConfig="{Binding TableXConfig }" Margin="0,0,0,0" Grid.RowSpan="1"     />
            <CheckBox IsChecked="{Binding OutputSwitchs[0]}"  Grid.Column="1"  Grid.Row="3" />

            <Grid Grid.Column="1" Grid.Row="1">
                <Grid.RowDefinitions >
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Button Grid.Row="0" Content="Test" Command="{Binding OutputSwitchCommand}" CommandParameter="btn0" IsEnabled="{Binding IsOutputSwitchEnable}"/>
                <TextBox Grid.Row="1" VerticalAlignment="Center" FontSize="25" Width="150" Text="{Binding NowPos}" IsEnabled="{Binding IsOutputSwitchEnable}"/>
                <Button Grid.Row="2" Content="Up" Command="{Binding OutputSwitchCommand}" CommandParameter="btn1" IsEnabled="{Binding IsOutputSwitchEnable}"/>
                <Button Grid.Row="3" Content="Down" Command="{Binding OutputSwitchCommand}" CommandParameter="btn2" IsEnabled="{Binding IsOutputSwitchEnable}"/>
            </Grid>


            <!--<ViewControlUC:WaferMappingCanvas  Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" VerticalAlignment="Top"  HorizontalAlignment="Left"   Width="650" Height="650"  ImageSource="{Binding MappingImage}"  ItemsSource="{Binding MappingDrawings}" 
                            MousePixcel="{Binding MappingMousePixel}"    RemoveShapeAction="{Binding RemoveShapeMappingAction}"  AddShapeAction="{Binding AddShapeMappingAction}" ClearShapeAction="{Binding ClearShapeMappingAction}"
                                     
                         IsShowBar="True"     >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseUp">
                        <i:InvokeCommandAction Command="{Binding MappingPreviewMouseUpCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ViewControlUC:WaferMappingCanvas>-->

            <UserControlUC:MacroUnitUC Grid.Column="3" Grid.Row="2" Margin="0,0,0,0" VerticalAlignment="Top" Macro="{Binding Macro}" MacroStatus="{Binding MacroStatus}" />

        </Grid>
    </Grid>
</Window>
